<?php

/**
 * Skeleton subclass for representing a row from the 'tbprofessorsenha' table.
 *
 *
 *
 * This class was autogenerated by Propel 1.4.0 on:
 *
 * Tue May  4 12:14:43 2010
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class Tbprofessorsenha extends BaseTbprofessorsenha {

    public function setSenha($v) {
        parent::setSenha(md5($v));
    }

    public function getNomeUsuario(){
        $professor = $this->getTbprofessor();
        return ($professor instanceof Tbprofessor) ? $professor->getSiape() : null;
    }

    public function login() {

//        // check if the user exists in database
//        $c = new Criteria();
//        $c->add(TbprofessorsenhaPeer::MATRICULA_PROF, $this->getMatriculaProf());
//        $prof_db = TbprofessorsenhaPeer::doSelectOne($c);
//
//        return (
//                        $prof_db
//                        && $this->getSenha() == $prof_db->getSenha()
//                        && $this->getSiape() == $prof_db->getTbprofessor()->getSiape()
//
//                ) ? true : false;
    }

    public function gerarSenha() {

        $chars = "abcdefghijkmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ023456789*%!@#";
        srand((double) microtime() * 1000000);
        $i = 0;

        $nova_senha = '';
        while ($i <= 7) {
            $num = rand() % 33;
            $tmp = substr($chars, $num, 1);
            $nova_senha = $nova_senha . $tmp;
            $i++;
        }

        $nova_senha;

        parent::setSenha(md5($nova_senha));
        return $nova_senha;
    }

    public function save(PropelPDO $con = null) {
        try {
            HotSpotRadcheckPeer::trocaSenha($this);
        } catch (Exception $exc) {
            sfContext::getInstance()->getLogger()->warning('Erro ao salvar senha do professor no Hotspot. ' . $exc->getMessage());
        }
        return parent::save($con);
    }

    public function delete(PropelPDO $con = null) {
        try {
            HotSpotRadcheckPeer::apagaSenha($this);
        } catch (Exception $exc) {
            sfContext::getInstance()->getLogger()->warning('Erro ao apagar senha do professor no Hotspot. ' . $exc->getMessage());
        }
        return parent::delete($con);
    }


} // Tbprofessorsenha
