<?php

/**
 * Skeleton subclass for representing a row from the 'tbhistorico' table.
 *
 *
 *
 * This class was autogenerated by Propel 1.4.0 on:
 *
 * Tue May  4 12:14:37 2010
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class Tbhistorico extends BaseTbhistorico {

    public function save(PropelPDO $con = null) {
        if (in_array($this->getIdConceito(), array(6, 7, 13))) {
            $is_admin = sfContext::getInstance()->getUser()->getAttributeHolder();
            $periodo = TbperiodoPeer::retrieveByPK($this->getIdPeriodo());
            if (isset($is_admin) && isset($periodo)) {
                if (sfContext::getInstance()->getUser()->isAuthenticated() && $is_admin->hasNamespace('admin_module')) {
                    $aluno = TbalunoPeer::retrieveByPK($this->getMatricula());
                    $criteria = new Criteria();
                    $criteria->addJoin(TbfilaPeer::ID_OFERTA, TbofertaPeer::ID_OFERTA);
                    $criteria->add(TbfilaPeer::MATRICULA, $aluno->getMatricula());
                    $criteria->add(TbofertaPeer::ID_PERIODO, $periodo->getIdPeriodo());
                    $criteria->add(TbofertaPeer::COD_DISCIPLINA, $this->getCodDisciplina());
                    $criteria->add(TbfilaPeer::ID_SITUACAO, 1);
                    $fila = new Tbfila();
                    foreach (TbfilaPeer::doSelect($criteria) as $fila) {
                        $fila->setIdSituacao(8);
                        $fila->save();
                    }
                }
            }
        }

        Log::save($this);
        parent::save($con);
    }

    public function getCarater() {

        $con = Propel::getConnection();

        $sql = "SELECT carater_desc(?, ?) as carater";

        $stmt = $con->prepare($sql);
        $stmt->bindValue(1, $this->getCodDisciplina());
        $stmt->bindValue(2, $this->getMatricula());

        $rs = $stmt->execute();
        $result = $stmt->fetch();

        return ($rs) ? $result['carater'] : 'Indefinido';
    }

    public function setMedia($v) {
        $v = str_replace(',', '.', $v);
        $v = ($v != '') ? sprintf('%.2f', $v) : null;
        parent::setMedia($v);
    }

}

// Tbhistorico
