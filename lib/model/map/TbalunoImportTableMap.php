<?php


/**
 * This class defines the structure of the 'tbaluno_import' table.
 *
 *
 * This class was autogenerated by Propel 1.4.0 on:
 *
 * Mon Mar 16 17:38:49 2015
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class TbalunoImportTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.TbalunoImportTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('tbaluno_import');
		$this->setPhpName('TbalunoImport');
		$this->setClassname('TbalunoImport');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		$this->setPrimaryKeyMethodInfo('tbaluno_import_id_pessoa_seq');
		// columns
		$this->addColumn('ID_PESSOA', 'IdPessoa', 'INTEGER', true, null, null);
		$this->addColumn('NOME', 'Nome', 'VARCHAR', false, 100, null);
		$this->addColumn('CELULAR', 'Celular', 'VARCHAR', false, 255, null);
		$this->addColumn('EMAIL', 'Email', 'VARCHAR', false, 100, null);
		$this->addColumn('FONE_RESIDENCIAL', 'FoneResidencial', 'VARCHAR', false, 20, null);
		$this->addColumn('FOTO', 'Foto', 'BLOB', false, null, null);
		$this->addColumn('ID_NECES_ESPECIAL', 'IdNecesEspecial', 'VARCHAR', false, 255, null);
		$this->addColumn('MATRICULA', 'Matricula', 'BIGINT', false, null, null);
		$this->addColumn('DT_NASCIMENTO', 'DtNascimento', 'DATE', false, null, null);
		$this->addColumn('NATURALIDADE', 'Naturalidade', 'VARCHAR', false, 255, null);
		$this->addColumn('UF_NASCIMENTO', 'UfNascimento', 'VARCHAR', false, 255, null);
		$this->addColumn('NACIONALIDADE', 'Nacionalidade', 'VARCHAR', false, 255, null);
		$this->addColumn('SEXO', 'Sexo', 'CHAR', false, 1, null);
		$this->addColumn('ESTADO_CIVIL', 'EstadoCivil', 'VARCHAR', false, 15, null);
		$this->addColumn('TITULO', 'Titulo', 'VARCHAR', false, 20, null);
		$this->addColumn('TITULO_ZONA', 'TituloZona', 'INTEGER', false, null, null);
		$this->addColumn('TITULO_SECAO', 'TituloSecao', 'INTEGER', false, null, null);
		$this->addColumn('RG', 'Rg', 'VARCHAR', false, 20, null);
		$this->addColumn('RG_DT_EXPED', 'RgDtExped', 'DATE', false, null, null);
		$this->addColumn('RG_ORG_EXPED', 'RgOrgExped', 'VARCHAR', false, 10, null);
		$this->addColumn('CPF', 'Cpf', 'VARCHAR', false, 11, null);
		$this->addColumn('RESERVISTA', 'Reservista', 'VARCHAR', false, 20, null);
		$this->addColumn('PAI', 'Pai', 'VARCHAR', false, 50, null);
		$this->addColumn('MAE', 'Mae', 'VARCHAR', false, 50, null);
		$this->addColumn('CEP', 'Cep', 'VARCHAR', false, 9, null);
		$this->addColumn('NUMERO', 'Numero', 'VARCHAR', false, 8, null);
		$this->addColumn('COMPLEMENTO', 'Complemento', 'VARCHAR', false, 255, null);
		$this->addColumn('ID_VERSAO_CURSO', 'IdVersaoCurso', 'INTEGER', false, null, null);
		$this->addColumn('ID_TIPO_INGRESSO', 'IdTipoIngresso', 'INTEGER', false, null, null);
		$this->addColumn('DT_INGRESSO', 'DtIngresso', 'DATE', true, null, null);
		$this->addColumn('ID_SITUACAO', 'IdSituacao', 'INTEGER', true, null, null);
		$this->addColumn('DT_SITUACAO', 'DtSituacao', 'DATE', true, null, null);
		$this->addColumn('ID_DESTINO', 'IdDestino', 'INTEGER', false, null, null);
		$this->addColumn('ID_2GRAU', 'Id2grau', 'INTEGER', false, null, null);
		$this->addColumn('ANO_CONCL_2GRAU', 'AnoConcl2grau', 'INTEGER', false, null, null);
		$this->addColumn('ID_3GRAU', 'Id3grau', 'INTEGER', false, null, null);
		$this->addColumn('ANO_CONCL_3GRAU', 'AnoConcl3grau', 'INTEGER', false, null, null);
		$this->addColumn('ID_TRABALHO', 'IdTrabalho', 'INTEGER', false, null, null);
		$this->addColumn('CEP_TRABALHO', 'CepTrabalho', 'VARCHAR', false, 8, null);
		$this->addColumn('FONE_TRABALHO', 'FoneTrabalho', 'VARCHAR', false, 255, null);
		$this->addColumn('RAMAL_TRABALHO', 'RamalTrabalho', 'VARCHAR', false, 20, null);
		$this->addColumn('MEDIA_GERAL', 'MediaGeral', 'NUMERIC', false, 10, null);
		$this->addColumn('CH_ELETIVA_CURSADA', 'ChEletivaCursada', 'INTEGER', false, null, null);
		$this->addColumn('CH_ELETIVA_SOLICITADA', 'ChEletivaSolicitada', 'INTEGER', false, null, null);
		$this->addColumn('CH_OBRIG_CURSADA', 'ChObrigCursada', 'INTEGER', false, null, null);
		$this->addColumn('CH_OBRIG_SOLICITADA', 'ChObrigSolicitada', 'INTEGER', false, null, null);
		$this->addColumn('CH_TOTAL', 'ChTotal', 'VARCHAR', false, 255, null);
		$this->addColumn('ID_ANTIGO', 'IdAntigo', 'INTEGER', false, null, null);
		$this->addColumn('INST2GRAU', 'Inst2grau', 'VARCHAR', false, 255, null);
		$this->addColumn('INST3GRAU', 'Inst3grau', 'VARCHAR', false, 255, null);
		$this->addColumn('INSTTRABALHO', 'Insttrabalho', 'VARCHAR', false, 255, null);
		$this->addColumn('ID_NATURALIDADE', 'IdNaturalidade', 'INTEGER', false, null, null);
		$this->addColumn('ID_NACIONALIDADE', 'IdNacionalidade', 'INTEGER', false, null, null);
		$this->addPrimaryKey('ID', 'Id', 'INTEGER', true, null, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // TbalunoImportTableMap
