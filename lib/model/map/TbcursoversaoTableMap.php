<?php


/**
 * This class defines the structure of the 'tbcursoversao' table.
 *
 *
 * This class was autogenerated by Propel 1.4.0 on:
 *
 * Mon Mar 16 17:38:51 2015
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class TbcursoversaoTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.TbcursoversaoTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('tbcursoversao');
		$this->setPhpName('Tbcursoversao');
		$this->setClassname('Tbcursoversao');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		$this->setPrimaryKeyMethodInfo('tbcursoversao_id_versao_curso_seq');
		// columns
		$this->addPrimaryKey('ID_VERSAO_CURSO', 'IdVersaoCurso', 'INTEGER', true, null, null);
		$this->addForeignKey('ID_FORMACAO', 'IdFormacao', 'INTEGER', 'tbformacao', 'ID_FORMACAO', false, null, null);
		$this->addForeignKey('COD_CURSO', 'CodCurso', 'INTEGER', 'tbcurso', 'COD_CURSO', true, null, null);
		$this->addForeignKey('ID_TURNO', 'IdTurno', 'INTEGER', 'tbturno', 'ID_TURNO', true, null, null);
		$this->addColumn('DESCRICAO', 'Descricao', 'VARCHAR', false, 100, null);
		$this->addColumn('SITUACAO', 'Situacao', 'VARCHAR', false, 10, null);
		$this->addColumn('DOC_CRIACAO', 'DocCriacao', 'LONGVARCHAR', false, null, null);
		$this->addColumn('DT_CRIACAO', 'DtCriacao', 'DATE', false, null, null);
		$this->addColumn('DT_INICIO', 'DtInicio', 'DATE', true, null, null);
		$this->addColumn('DT_TERMINO', 'DtTermino', 'DATE', false, null, null);
		$this->addForeignKey('ID_CAMPUS', 'IdCampus', 'INTEGER', 'tbcampus', 'ID_CAMPUS', false, null, null);
		$this->addForeignKey('ID_SETOR', 'IdSetor', 'INTEGER', 'tbsetor', 'ID_SETOR', false, null, null);
		$this->addColumn('PRAZO_MIN', 'PrazoMin', 'CHAR', false, 3, null);
		$this->addColumn('PRAZO_MAX', 'PrazoMax', 'CHAR', false, 3, null);
		$this->addColumn('CRED_OBR', 'CredObr', 'VARCHAR', false, 255, null);
		$this->addColumn('CRED_ELETIVO', 'CredEletivo', 'VARCHAR', false, 255, null);
		$this->addColumn('CRED_TOTAL', 'CredTotal', 'VARCHAR', false, 255, null);
		$this->addColumn('CH_OBR', 'ChObr', 'INTEGER', false, null, null);
		$this->addColumn('CH_ELETIVA', 'ChEletiva', 'INTEGER', false, null, null);
		$this->addColumn('CH_TOTAL', 'ChTotal', 'VARCHAR', false, 255, null);
		$this->addColumn('SEMESTRE_INICIO', 'SemestreInicio', 'INTEGER', false, null, null);
		$this->addColumn('COD_INTEGRACAO', 'CodIntegracao', 'VARCHAR', false, 30, null);
		$this->addColumn('COD_INTEGRACAO_TIPO', 'CodIntegracaoTipo', 'CHAR', false, 1, null);
		$this->addColumn('CREATED_AT', 'CreatedAt', 'DATE', false, null, null);
		$this->addColumn('UPDATED_AT', 'UpdatedAt', 'DATE', false, null, null);
		$this->addColumn('CREATED_BY', 'CreatedBy', 'VARCHAR', false, 20, null);
		$this->addColumn('UPDATED_BY', 'UpdatedBy', 'VARCHAR', false, 20, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('Tbformacao', 'Tbformacao', RelationMap::MANY_TO_ONE, array('id_formacao' => 'id_formacao', ), null, null);
    $this->addRelation('Tbcurso', 'Tbcurso', RelationMap::MANY_TO_ONE, array('cod_curso' => 'cod_curso', ), null, null);
    $this->addRelation('Tbturno', 'Tbturno', RelationMap::MANY_TO_ONE, array('id_turno' => 'id_turno', ), null, null);
    $this->addRelation('Tbcampus', 'Tbcampus', RelationMap::MANY_TO_ONE, array('id_campus' => 'id_campus', ), null, null);
    $this->addRelation('Tbsetor', 'Tbsetor', RelationMap::MANY_TO_ONE, array('id_setor' => 'id_setor', ), null, null);
    $this->addRelation('Tbalunomatricula', 'Tbalunomatricula', RelationMap::ONE_TO_MANY, array('id_versao_curso' => 'id_versao_curso', ), null, null);
    $this->addRelation('Tbalunobackup', 'Tbalunobackup', RelationMap::ONE_TO_MANY, array('id_versao_curso' => 'id_versao_curso', ), null, null);
    $this->addRelation('Tbfilacalouros', 'Tbfilacalouros', RelationMap::ONE_TO_MANY, array('id_versao_curso' => 'id_versao_curso', ), null, null);
    $this->addRelation('Tbvagas', 'Tbvagas', RelationMap::ONE_TO_MANY, array('id_versao_curso' => 'id_versao_curso', ), null, null);
    $this->addRelation('Tbloadaluno', 'Tbloadaluno', RelationMap::ONE_TO_MANY, array('id_versao_curso' => 'id_versao_curso', ), null, null);
    $this->addRelation('Tbaluno', 'Tbaluno', RelationMap::ONE_TO_MANY, array('id_versao_curso' => 'id_versao_curso', ), null, null);
    $this->addRelation('Tbcurriculodisciplinas', 'Tbcurriculodisciplinas', RelationMap::ONE_TO_MANY, array('id_versao_curso' => 'id_versao_curso', ), null, null);
    $this->addRelation('Tbdisciplinarequisitos', 'Tbdisciplinarequisitos', RelationMap::ONE_TO_MANY, array('id_versao_curso' => 'id_versao_curso', ), null, null);
    $this->addRelation('Tbdisciplinacorequisitos', 'Tbdisciplinacorequisitos', RelationMap::ONE_TO_MANY, array('id_versao_curso' => 'id_versao_curso', ), null, null);
    $this->addRelation('Tbcoordenadorcurso', 'Tbcoordenadorcurso', RelationMap::ONE_TO_MANY, array('id_versao_curso' => 'id_versao_curso', ), null, null);
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
			'symfony_timestampable' => array('create_column' => 'created_at', 'update_column' => 'updated_at', ),
		);
	} // getBehaviors()

} // TbcursoversaoTableMap
