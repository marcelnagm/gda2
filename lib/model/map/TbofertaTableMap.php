<?php


/**
 * This class defines the structure of the 'tboferta' table.
 *
 *
 * This class was autogenerated by Propel 1.4.0 on:
 *
 * Mon Mar 16 17:38:54 2015
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class TbofertaTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.TbofertaTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('tboferta');
		$this->setPhpName('Tboferta');
		$this->setClassname('Tboferta');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		$this->setPrimaryKeyMethodInfo('tboferta_id_oferta_seq');
		// columns
		$this->addPrimaryKey('ID_OFERTA', 'IdOferta', 'INTEGER', true, null, null);
		$this->addForeignKey('ID_PERIODO', 'IdPeriodo', 'INTEGER', 'tbperiodo', 'ID_PERIODO', true, null, null);
		$this->addForeignKey('ID_TURNO', 'IdTurno', 'INTEGER', 'tbturno', 'ID_TURNO', true, null, null);
		$this->addForeignKey('COD_CURSO', 'CodCurso', 'INTEGER', 'tbcurso', 'COD_CURSO', true, null, null);
		$this->addForeignKey('COD_CURSO_DESTINO', 'CodCursoDestino', 'INTEGER', 'tbcurso', 'COD_CURSO', false, null, null);
		$this->addForeignKey('COD_DISCIPLINA', 'CodDisciplina', 'VARCHAR', 'tbdisciplina', 'COD_DISCIPLINA', true, 8, null);
		$this->addColumn('TURMA', 'Turma', 'CHAR', true, 5, null);
		$this->addForeignKey('ID_SALA', 'IdSala', 'INTEGER', 'tbsala', 'ID_SALA', true, null, null);
		$this->addColumn('VAGAS', 'Vagas', 'INTEGER', true, null, null);
		$this->addColumn('MATRICULADOS', 'Matriculados', 'INTEGER', false, null, null);
		$this->addColumn('EXCESSO', 'Excesso', 'INTEGER', false, null, null);
		$this->addColumn('CANCELADOS', 'Cancelados', 'INTEGER', false, null, null);
		$this->addColumn('TRANCADOS', 'Trancados', 'INTEGER', false, null, null);
		$this->addForeignKey('ID_MATRICULA_PROF', 'IdMatriculaProf', 'INTEGER', 'tbprofessor', 'MATRICULA_PROF', true, null, null);
		$this->addForeignKey('ID_MATRICULA_PROF2', 'IdMatriculaProf2', 'INTEGER', 'tbprofessor', 'MATRICULA_PROF', false, null, null);
		$this->addForeignKey('ID_SETOR', 'IdSetor', 'INTEGER', 'tbsetor', 'ID_SETOR', true, null, null);
		$this->addColumn('DT_INICIO', 'DtInicio', 'DATE', false, null, null);
		$this->addColumn('DT_FIM', 'DtFim', 'DATE', false, null, null);
		$this->addForeignKey('ID_SITUACAO', 'IdSituacao', 'INTEGER', 'tbofertasituacao', 'ID_SITUACAO', true, null, null);
		$this->addForeignKey('ID_POLO', 'IdPolo', 'INTEGER', 'tbpolos', 'ID_POLO', true, null, 0);
		$this->addColumn('CREATED_AT', 'CreatedAt', 'DATE', false, null, null);
		$this->addColumn('UPDATED_AT', 'UpdatedAt', 'DATE', false, null, null);
		$this->addColumn('CREATED_BY', 'CreatedBy', 'VARCHAR', false, 20, null);
		$this->addColumn('UPDATED_BY', 'UpdatedBy', 'VARCHAR', false, 20, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('Tbperiodo', 'Tbperiodo', RelationMap::MANY_TO_ONE, array('id_periodo' => 'id_periodo', ), null, null);
    $this->addRelation('Tbturno', 'Tbturno', RelationMap::MANY_TO_ONE, array('id_turno' => 'id_turno', ), null, null);
    $this->addRelation('TbcursoRelatedByCodCurso', 'Tbcurso', RelationMap::MANY_TO_ONE, array('cod_curso' => 'cod_curso', ), null, null);
    $this->addRelation('TbcursoRelatedByCodCursoDestino', 'Tbcurso', RelationMap::MANY_TO_ONE, array('cod_curso_destino' => 'cod_curso', ), null, null);
    $this->addRelation('Tbdisciplina', 'Tbdisciplina', RelationMap::MANY_TO_ONE, array('cod_disciplina' => 'cod_disciplina', ), null, null);
    $this->addRelation('Tbsala', 'Tbsala', RelationMap::MANY_TO_ONE, array('id_sala' => 'id_sala', ), null, null);
    $this->addRelation('TbprofessorRelatedByIdMatriculaProf', 'Tbprofessor', RelationMap::MANY_TO_ONE, array('id_matricula_prof' => 'matricula_prof', ), null, null);
    $this->addRelation('TbprofessorRelatedByIdMatriculaProf2', 'Tbprofessor', RelationMap::MANY_TO_ONE, array('id_matricula_prof2' => 'matricula_prof', ), null, null);
    $this->addRelation('Tbsetor', 'Tbsetor', RelationMap::MANY_TO_ONE, array('id_setor' => 'id_setor', ), null, null);
    $this->addRelation('Tbofertasituacao', 'Tbofertasituacao', RelationMap::MANY_TO_ONE, array('id_situacao' => 'id_situacao', ), null, null);
    $this->addRelation('Tbpolos', 'Tbpolos', RelationMap::MANY_TO_ONE, array('id_polo' => 'id_polo', ), null, null);
    $this->addRelation('Tbfilacalouros', 'Tbfilacalouros', RelationMap::ONE_TO_MANY, array('id_oferta' => 'id_oferta', ), null, null);
    $this->addRelation('Tbfila', 'Tbfila', RelationMap::ONE_TO_MANY, array('id_oferta' => 'id_oferta', ), null, null);
    $this->addRelation('Tbofertacoordenador', 'Tbofertacoordenador', RelationMap::ONE_TO_MANY, array('id_oferta' => 'id_oferta', ), null, null);
    $this->addRelation('Tbofertahorario', 'Tbofertahorario', RelationMap::ONE_TO_MANY, array('id_oferta' => 'id_oferta', ), null, null);
    $this->addRelation('Tbturma', 'Tbturma', RelationMap::ONE_TO_MANY, array('id_oferta' => 'id_oferta', ), null, null);
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
			'symfony_timestampable' => array('create_column' => 'created_at', 'update_column' => 'updated_at', ),
		);
	} // getBehaviors()

} // TbofertaTableMap
