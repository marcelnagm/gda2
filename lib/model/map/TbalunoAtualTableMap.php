<?php


/**
 * This class defines the structure of the 'tbaluno_atual' table.
 *
 *
 * This class was autogenerated by Propel 1.4.0 on:
 *
 * Mon Mar 16 17:38:49 2015
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class TbalunoAtualTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.TbalunoAtualTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('tbaluno_atual');
		$this->setPhpName('TbalunoAtual');
		$this->setClassname('TbalunoAtual');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(false);
		// columns
		$this->addColumn('NOME', 'Nome', 'VARCHAR', false, 100, null);
		$this->addPrimaryKey('MATRICULA', 'Matricula', 'BIGINT', true, null, null);
		$this->addColumn('DT_NASCIMENTO', 'DtNascimento', 'DATE', true, null, null);
		$this->addColumn('NATURALIDADE', 'Naturalidade', 'VARCHAR', true, 40, null);
		$this->addColumn('UF_NASCIMENTO', 'UfNascimento', 'CHAR', true, 2, null);
		$this->addColumn('NACIONALIDADE', 'Nacionalidade', 'VARCHAR', true, 15, null);
		$this->addColumn('SEXO', 'Sexo', 'CHAR', true, 1, null);
		$this->addColumn('ESTADO_CIVIL', 'EstadoCivil', 'VARCHAR', true, 15, null);
		$this->addColumn('PAI', 'Pai', 'VARCHAR', false, 50, null);
		$this->addColumn('MAE', 'Mae', 'VARCHAR', false, 50, null);
		$this->addColumn('CELULAR', 'Celular', 'VARCHAR', false, 15, null);
		$this->addColumn('FONE_RESIDENCIAL', 'FoneResidencial', 'VARCHAR', false, 15, null);
		$this->addColumn('EMAIL1', 'Email1', 'VARCHAR', false, 60, null);
		$this->addColumn('EMAIL2', 'Email2', 'VARCHAR', false, 60, null);
		$this->addColumn('END_RESIDENCIAL', 'EndResidencial', 'VARCHAR', true, 60, null);
		$this->addColumn('BAIRRO_RESIDENCIAL', 'BairroResidencial', 'VARCHAR', true, 40, null);
		$this->addColumn('CEP_RESIDENCIAL', 'CepResidencial', 'VARCHAR', true, 8, null);
		$this->addColumn('NUMERO', 'Numero', 'VARCHAR', true, 8, null);
		$this->addColumn('COMPLEMENTO', 'Complemento', 'VARCHAR', false, 50, null);
		$this->addColumn('GRAU_2', 'Grau2', 'VARCHAR', true, 100, null);
		$this->addColumn('UF_CONC_2', 'UfConc2', 'CHAR', true, 2, null);
		$this->addColumn('ANO_CONCL_2GRAU', 'AnoConcl2grau', 'CHAR', true, 4, null);
		$this->addColumn('LOCAL_TRABALHO', 'LocalTrabalho', 'VARCHAR', false, 100, null);
		$this->addColumn('END_TRABALHO', 'EndTrabalho', 'VARCHAR', false, 60, null);
		$this->addColumn('BAIRRO_TRABALHO', 'BairroTrabalho', 'VARCHAR', false, 40, null);
		$this->addColumn('CEP_TRABALHO', 'CepTrabalho', 'VARCHAR', false, 8, null);
		$this->addColumn('FONE_TRABALHO', 'FoneTrabalho', 'VARCHAR', false, 15, null);
		$this->addColumn('RAMAL_TRABALHO', 'RamalTrabalho', 'VARCHAR', false, 5, null);
		$this->addColumn('CREATED_AT', 'CreatedAt', 'DATE', false, null, null);
		$this->addColumn('UPDATED_AT', 'UpdatedAt', 'DATE', false, null, null);
		$this->addColumn('CREATED_BY', 'CreatedBy', 'VARCHAR', false, 20, null);
		$this->addColumn('UPDATED_BY', 'UpdatedBy', 'VARCHAR', false, 20, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
			'symfony_timestampable' => array('create_column' => 'created_at', 'update_column' => 'updated_at', ),
		);
	} // getBehaviors()

} // TbalunoAtualTableMap
