<?php


/**
 * This class defines the structure of the 'tbalunobackup' table.
 *
 *
 * This class was autogenerated by Propel 1.4.0 on:
 *
 * Mon Mar 16 17:38:47 2015
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class TbalunobackupTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.TbalunobackupTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('tbalunobackup');
		$this->setPhpName('Tbalunobackup');
		$this->setClassname('Tbalunobackup');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		$this->setPrimaryKeyMethodInfo('tbpessoa_id_pessoa_seq');
		// columns
		$this->addColumn('ID_PESSOA', 'IdPessoa', 'INTEGER', true, null, null);
		$this->addPrimaryKey('MATRICULA', 'Matricula', 'BIGINT', true, null, null);
		$this->addColumn('NOME', 'Nome', 'VARCHAR', true, 100, null);
		$this->addColumn('CELULAR', 'Celular', 'VARCHAR', false, 15, null);
		$this->addColumn('EMAIL', 'Email', 'VARCHAR', false, 100, null);
		$this->addColumn('FONE_RESIDENCIAL', 'FoneResidencial', 'VARCHAR', false, 15, null);
		$this->addColumn('FOTO', 'Foto', 'BLOB', false, null, null);
		$this->addForeignKey('ID_NECES_ESPECIAL', 'IdNecesEspecial', 'VARCHAR', 'tbnecesespecial', 'ID_NECES_ESPECIAL', true, 255, null);
		$this->addColumn('DT_NASCIMENTO', 'DtNascimento', 'DATE', true, null, null);
		$this->addForeignKey('NATURALIDADE', 'Naturalidade', 'INTEGER', 'tbcidade', 'ID_CIDADE', true, null, null);
		$this->addColumn('UF_NASCIMENTO', 'UfNascimento', 'CHAR', false, 2, null);
		$this->addForeignKey('NACIONALIDADE', 'Nacionalidade', 'INTEGER', 'tbpais', 'ID_PAIS', true, null, null);
		$this->addColumn('SEXO', 'Sexo', 'CHAR', true, 1, null);
		$this->addColumn('ESTADO_CIVIL', 'EstadoCivil', 'VARCHAR', false, 15, null);
		$this->addColumn('TITULO', 'Titulo', 'VARCHAR', false, 20, null);
		$this->addColumn('TITULO_ZONA', 'TituloZona', 'INTEGER', false, null, null);
		$this->addColumn('TITULO_SECAO', 'TituloSecao', 'INTEGER', false, null, null);
		$this->addColumn('RG', 'Rg', 'VARCHAR', true, 20, null);
		$this->addColumn('RG_DT_EXPED', 'RgDtExped', 'DATE', false, null, null);
		$this->addColumn('RG_ORG_EXPED', 'RgOrgExped', 'VARCHAR', false, 10, null);
		$this->addColumn('CPF', 'Cpf', 'VARCHAR', true, 11, null);
		$this->addColumn('RESERVISTA', 'Reservista', 'VARCHAR', false, 20, null);
		$this->addColumn('PAI', 'Pai', 'VARCHAR', false, 50, null);
		$this->addColumn('MAE', 'Mae', 'VARCHAR', false, 50, null);
		$this->addForeignKey('CEP', 'Cep', 'VARCHAR', 'tblogradouro', 'CEP', true, 9, null);
		$this->addColumn('NUMERO', 'Numero', 'VARCHAR', true, 8, null);
		$this->addColumn('COMPLEMENTO', 'Complemento', 'VARCHAR', false, 50, null);
		$this->addForeignKey('ID_VERSAO_CURSO', 'IdVersaoCurso', 'INTEGER', 'tbcursoversao', 'ID_VERSAO_CURSO', true, null, null);
		$this->addForeignKey('ID_TIPO_INGRESSO', 'IdTipoIngresso', 'INTEGER', 'tbtipoingresso', 'ID_TIPO_INGRESSO', true, null, null);
		$this->addColumn('DT_INGRESSO', 'DtIngresso', 'DATE', true, null, null);
		$this->addForeignKey('ID_SITUACAO', 'IdSituacao', 'INTEGER', 'tbalunosituacao', 'ID_SITUACAO', true, null, null);
		$this->addColumn('DT_SITUACAO', 'DtSituacao', 'DATE', false, null, null);
		$this->addForeignKey('ID_DESTINO', 'IdDestino', 'INTEGER', 'tbinstexterna', 'ID_INST_EXTERNA', false, null, null);
		$this->addForeignKey('ID_2GRAU', 'Id2grau', 'INTEGER', 'tbinstexterna', 'ID_INST_EXTERNA', false, null, null);
		$this->addColumn('ANO_CONCL_2GRAU', 'AnoConcl2grau', 'INTEGER', false, null, null);
		$this->addForeignKey('ID_3GRAU', 'Id3grau', 'INTEGER', 'tbinstexterna', 'ID_INST_EXTERNA', false, null, null);
		$this->addColumn('ANO_CONCL_3GRAU', 'AnoConcl3grau', 'INTEGER', false, null, null);
		$this->addForeignKey('ID_TRABALHO', 'IdTrabalho', 'INTEGER', 'tbinstexterna', 'ID_INST_EXTERNA', false, null, null);
		$this->addForeignKey('CEP_TRABALHO', 'CepTrabalho', 'VARCHAR', 'tblogradouro', 'CEP', false, 8, null);
		$this->addColumn('FONE_TRABALHO', 'FoneTrabalho', 'VARCHAR', false, 15, null);
		$this->addColumn('RAMAL_TRABALHO', 'RamalTrabalho', 'VARCHAR', false, 5, null);
		$this->addColumn('MEDIA_GERAL', 'MediaGeral', 'NUMERIC', false, 10, null);
		$this->addColumn('CH_ELETIVA_CURSADA', 'ChEletivaCursada', 'INTEGER', false, null, null);
		$this->addColumn('CH_ELETIVA_SOLICITADA', 'ChEletivaSolicitada', 'INTEGER', false, null, null);
		$this->addColumn('CH_OBRIG_CURSADA', 'ChObrigCursada', 'INTEGER', false, null, null);
		$this->addColumn('CH_OBRIG_SOLICITADA', 'ChObrigSolicitada', 'INTEGER', false, null, null);
		$this->addColumn('CH_TOTAL', 'ChTotal', 'INTEGER', false, null, null);
		$this->addColumn('OP_INGRESSO', 'OpIngresso', 'INTEGER', false, null, 0);
		$this->addForeignKey('ID_POLO', 'IdPolo', 'INTEGER', 'tbpolos', 'ID_POLO', true, null, 0);
		$this->addColumn('CREATED_AT', 'CreatedAt', 'DATE', false, null, null);
		$this->addColumn('UPDATED_AT', 'UpdatedAt', 'DATE', false, null, null);
		$this->addColumn('CREATED_BY', 'CreatedBy', 'VARCHAR', false, 20, null);
		$this->addColumn('UPDATED_BY', 'UpdatedBy', 'VARCHAR', false, 20, null);
		$this->addColumn('ID_ANTIGO', 'IdAntigo', 'INTEGER', false, null, null);
		$this->addForeignKey('ID_RACA', 'IdRaca', 'INTEGER', 'tbaluno_racacor', 'ID_RACA', true, null, null);
		$this->addColumn('QTD_IRMAOS', 'QtdIrmaos', 'INTEGER', false, null, 0);
		$this->addColumn('RENDA_FAMILIAR', 'RendaFamiliar', 'VARCHAR', false, 20, null);
		$this->addForeignKey('ID_RELIGIAO', 'IdReligiao', 'INTEGER', 'tbreligiao', 'ID_RELIGIAO', true, null, 4);
		$this->addColumn('PAI_PROFISSAO', 'PaiProfissao', 'VARCHAR', false, 100, null);
		$this->addColumn('PAI_LOCAL_TRABALHO', 'PaiLocalTrabalho', 'VARCHAR', false, 100, null);
		$this->addColumn('PAI_FONE', 'PaiFone', 'VARCHAR', false, 25, null);
		$this->addForeignKey('PAI_ID_NIVEL_INSTRUCAO', 'PaiIdNivelInstrucao', 'INTEGER', 'tbnivelinstrucao', 'ID_NIVEL_INSTRUCAO', true, null, null);
		$this->addColumn('MAE_PROFISSAO', 'MaeProfissao', 'VARCHAR', false, 100, null);
		$this->addColumn('MAE_LOCAL_TRABALHO', 'MaeLocalTrabalho', 'VARCHAR', false, 100, null);
		$this->addColumn('MAE_FONE', 'MaeFone', 'VARCHAR', false, 25, null);
		$this->addForeignKey('MAE_ID_NIVEL_INSTRUCAO', 'MaeIdNivelInstrucao', 'INTEGER', 'tbnivelinstrucao', 'ID_NIVEL_INSTRUCAO', true, null, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('Tbnecesespecial', 'Tbnecesespecial', RelationMap::MANY_TO_ONE, array('id_neces_especial' => 'id_neces_especial', ), null, null);
    $this->addRelation('Tbcidade', 'Tbcidade', RelationMap::MANY_TO_ONE, array('naturalidade' => 'id_cidade', ), null, null);
    $this->addRelation('Tbpais', 'Tbpais', RelationMap::MANY_TO_ONE, array('nacionalidade' => 'id_pais', ), null, null);
    $this->addRelation('TblogradouroRelatedByCep', 'Tblogradouro', RelationMap::MANY_TO_ONE, array('cep' => 'cep', ), null, null);
    $this->addRelation('Tbcursoversao', 'Tbcursoversao', RelationMap::MANY_TO_ONE, array('id_versao_curso' => 'id_versao_curso', ), null, null);
    $this->addRelation('Tbtipoingresso', 'Tbtipoingresso', RelationMap::MANY_TO_ONE, array('id_tipo_ingresso' => 'id_tipo_ingresso', ), null, null);
    $this->addRelation('Tbalunosituacao', 'Tbalunosituacao', RelationMap::MANY_TO_ONE, array('id_situacao' => 'id_situacao', ), null, null);
    $this->addRelation('TbinstexternaRelatedByIdDestino', 'Tbinstexterna', RelationMap::MANY_TO_ONE, array('id_destino' => 'id_inst_externa', ), null, null);
    $this->addRelation('TbinstexternaRelatedById2grau', 'Tbinstexterna', RelationMap::MANY_TO_ONE, array('id_2grau' => 'id_inst_externa', ), null, null);
    $this->addRelation('TbinstexternaRelatedById3grau', 'Tbinstexterna', RelationMap::MANY_TO_ONE, array('id_3grau' => 'id_inst_externa', ), null, null);
    $this->addRelation('TbinstexternaRelatedByIdTrabalho', 'Tbinstexterna', RelationMap::MANY_TO_ONE, array('id_trabalho' => 'id_inst_externa', ), null, null);
    $this->addRelation('TblogradouroRelatedByCepTrabalho', 'Tblogradouro', RelationMap::MANY_TO_ONE, array('cep_trabalho' => 'cep', ), null, null);
    $this->addRelation('Tbpolos', 'Tbpolos', RelationMap::MANY_TO_ONE, array('id_polo' => 'id_polo', ), null, null);
    $this->addRelation('Tbalunoracacor', 'Tbalunoracacor', RelationMap::MANY_TO_ONE, array('id_raca' => 'id_raca', ), null, null);
    $this->addRelation('Tbreligiao', 'Tbreligiao', RelationMap::MANY_TO_ONE, array('id_religiao' => 'id_religiao', ), null, null);
    $this->addRelation('TbnivelinstrucaoRelatedByPaiIdNivelInstrucao', 'Tbnivelinstrucao', RelationMap::MANY_TO_ONE, array('pai_id_nivel_instrucao' => 'id_nivel_instrucao', ), null, null);
    $this->addRelation('TbnivelinstrucaoRelatedByMaeIdNivelInstrucao', 'Tbnivelinstrucao', RelationMap::MANY_TO_ONE, array('mae_id_nivel_instrucao' => 'id_nivel_instrucao', ), null, null);
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
			'symfony_timestampable' => array('create_column' => 'created_at', 'update_column' => 'updated_at', ),
		);
	} // getBehaviors()

} // TbalunobackupTableMap
