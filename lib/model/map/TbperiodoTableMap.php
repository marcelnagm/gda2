<?php


/**
 * This class defines the structure of the 'tbperiodo' table.
 *
 *
 * This class was autogenerated by Propel 1.4.0 on:
 *
 * Mon Mar 16 17:38:54 2015
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class TbperiodoTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.TbperiodoTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('tbperiodo');
		$this->setPhpName('Tbperiodo');
		$this->setClassname('Tbperiodo');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		$this->setPrimaryKeyMethodInfo('tbperiodo_id_periodo_seq');
		// columns
		$this->addPrimaryKey('ID_PERIODO', 'IdPeriodo', 'INTEGER', true, null, null);
		$this->addColumn('DESCRICAO', 'Descricao', 'VARCHAR', false, 50, null);
		$this->addColumn('ANO', 'Ano', 'INTEGER', true, null, null);
		$this->addColumn('SEMESTRE', 'Semestre', 'INTEGER', true, null, null);
		$this->addColumn('PERIODO', 'Periodo', 'INTEGER', true, null, null);
		$this->addColumn('DT_INICIO', 'DtInicio', 'DATE', false, null, null);
		$this->addColumn('DT_FIM', 'DtFim', 'DATE', false, null, null);
		$this->addColumn('DT_FIM_NOTAS', 'DtFimNotas', 'DATE', false, null, null);
		$this->addColumn('DT_INICIO_OFERTA', 'DtInicioOferta', 'DATE', false, null, null);
		$this->addColumn('DT_FIM_OFERTA', 'DtFimOferta', 'DATE', false, null, null);
		$this->addColumn('DT_INICIO_FILA', 'DtInicioFila', 'DATE', false, null, null);
		$this->addColumn('DT_FIM_FILA', 'DtFimFila', 'DATE', false, null, null);
		$this->addColumn('DT_INICIO_RESULTADO', 'DtInicioResultado', 'DATE', false, null, null);
		$this->addColumn('DT_FIM_RESULTADO', 'DtFimResultado', 'DATE', false, null, null);
		$this->addColumn('DT_INICIO_OFERTA_CADASTRO', 'DtInicioOfertaCadastro', 'DATE', false, null, null);
		$this->addColumn('DT_FIM_OFERTA_CADASTRO', 'DtFimOfertaCadastro', 'DATE', false, null, null);
		$this->addColumn('DT_INICIO_CADASTRO', 'DtInicioCadastro', 'DATE', false, null, null);
		$this->addColumn('DT_FIM_CADASTRO', 'DtFimCadastro', 'DATE', false, null, null);
		$this->addColumn('DT_INICIO_AJUSTE', 'DtInicioAjuste', 'DATE', false, null, null);
		$this->addColumn('DT_FIM_AJUSTE', 'DtFimAjuste', 'DATE', false, null, null);
		$this->addColumn('DT_INICIO_AJUSTE_FILA', 'DtInicioAjusteFila', 'DATE', false, null, null);
		$this->addColumn('DT_FIM_AJUSTE_FILA', 'DtFimAjusteFila', 'DATE', false, null, null);
		$this->addColumn('DT_INICIO_AJUSTE_RESULTADO', 'DtInicioAjusteResultado', 'DATE', false, null, null);
		$this->addColumn('DT_FIM_AJUSTE_RESULTADO', 'DtFimAjusteResultado', 'DATE', false, null, null);
		$this->addColumn('DT_INICIO_TRANCAMENTO', 'DtInicioTrancamento', 'DATE', false, null, null);
		$this->addColumn('DT_FIM_TRANCAMENTO', 'DtFimTrancamento', 'DATE', false, null, null);
		$this->addColumn('SUCINTO', 'Sucinto', 'VARCHAR', false, 50, null);
		$this->addForeignKey('ID_NIVEL', 'IdNivel', 'INTEGER', 'tbcursonivel', 'ID_NIVEL', true, null, null);
		$this->addColumn('CREATED_AT', 'CreatedAt', 'DATE', false, null, null);
		$this->addColumn('UPDATED_AT', 'UpdatedAt', 'DATE', false, null, null);
		$this->addColumn('CREATED_BY', 'CreatedBy', 'VARCHAR', false, 20, null);
		$this->addColumn('UPDATED_BY', 'UpdatedBy', 'VARCHAR', false, 20, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('Tbcursonivel', 'Tbcursonivel', RelationMap::MANY_TO_ONE, array('id_nivel' => 'id_nivel', ), null, null);
    $this->addRelation('Tbfilacalouros', 'Tbfilacalouros', RelationMap::ONE_TO_MANY, array('id_periodo' => 'id_periodo', ), null, null);
    $this->addRelation('Tbhistorico', 'Tbhistorico', RelationMap::ONE_TO_MANY, array('id_periodo' => 'id_periodo', ), null, null);
    $this->addRelation('Tboferta', 'Tboferta', RelationMap::ONE_TO_MANY, array('id_periodo' => 'id_periodo', ), null, null);
    $this->addRelation('Tbprofessorticket', 'Tbprofessorticket', RelationMap::ONE_TO_MANY, array('id_periodo' => 'id_periodo', ), null, null);
    $this->addRelation('Tbturma', 'Tbturma', RelationMap::ONE_TO_MANY, array('id_periodo' => 'id_periodo', ), null, null);
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
			'symfony_timestampable' => array('create_column' => 'created_at', 'update_column' => 'updated_at', ),
		);
	} // getBehaviors()

} // TbperiodoTableMap
