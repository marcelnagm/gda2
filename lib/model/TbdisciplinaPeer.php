<?php

/**
 * Skeleton subclass for performing query and update operations on the 'tbdisciplina' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.0 on:
 *
 * Tue May  4 12:14:35 2010
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class TbdisciplinaPeer extends BaseTbdisciplinaPeer {

    public static function doSelect(Criteria $criteria, PropelPDO $con = null) {
        $criteria->addAscendingOrderByColumn(self::COD_DISCIPLINA);
        $criteria->addAscendingOrderByColumn(self::DESCRICAO);
        return parent::doSelect($criteria, $con);
    }

    public static function retrieveByCodDisciplina($cod_disciplinas) {

        $criteria = new Criteria();
        $criteria->add(TbdisciplinaPeer::COD_DISCIPLINA, $cod_disciplinas, Criteria::IN);
        return TbdisciplinaPeer::doSelect($criteria);
    }

    public static function getCaraterByAluno($cod_disciplina,$aluno) {
        return TbdisciplinaPeer::getCaraterNew($cod_disciplina, $aluno->getMatricula());
    }

    public static function getCaraterNew($cod_disciplina, $matricula) {
        $con = Propel::getConnection();

        $sql = "SELECT carater_desc(?, ?) as carater";

        $stmt = $con->prepare($sql);
        $stmt->bindValue(1, $cod_disciplina);
        $stmt->bindValue(2, $matricula);

        $rs = $stmt->execute();
        $result = $stmt->fetch();

        return ($rs) ? $result['carater'] : 'Indefinido';

    }
    
    public static function getCarater($cod_disciplina, $aluno) {
        $criteria = new Criteria();
        $criteria->add(TbcurriculodisciplinasPeer::ID_VERSAO_CURSO, $id_versao_curso);
        $criteria->add(TbcurriculodisciplinasPeer::COD_DISCIPLINA, $cod_disciplina);

        if (TbcurriculodisciplinasPeer::doCount($criteria) > 0) {
            return TbcurriculodisciplinasPeer::doSelectOne($criteria)->getTbcarater()->getDescricao();
        } else {
            return 'ELETIVA';
        }
    }

//    public static function NovoCodigo($codigo_novo, $codigo_antigo) {
//
////        $con = Propel::getConnection();
////        $con->beginTransaction();
//        $disciplina = TbdisciplinaPeer::retrieveByPK($codigo_antigo);
//
////        $criteria = new Criteria();
////        $criteria->add(TbdisciplinaPeer::COD_DISCIPLINA,'XYZ999' );
////        if(count(TbdisciplinaPeer::doCount($criteria))==0){
////        $tempdisciplina = new tbdisciplina();
////        $tempdisciplina->setCodDisciplina('XYZ999');
////        $tempdisciplina->setDescricao('XYZ999');
////        $tempdisciplina->setSucinto('XYZ999');
////        $tempdisciplina->setCh(90);
////        $tempdisciplina->setChTeorica(90);
////        $tempdisciplina->setChPratica(90);
////        $tempdisciplina->setIdSituacao(0);
////        $tempdisciplina->save();
////        }else{
//        $tempdisciplina = TbdisciplinaPeer::retrieveByPK('XYZ999');
////        }
////        TbdisciplinaPeer::TrocarCodigo($tempdisciplina->getCodDisciplina(), $disciplina);
////
//        $disciplina->setCodDisciplina($codigo_novo);
//        $disciplina->save();
//
//        TbdisciplinaPeer::TrocarCodigo($codigo_novo, $tempdisciplina);
////        $tempdisciplina->delete();
//    }

    public static function NovoCodigo($codigo_novo, $codigo_antigo) {

//        $con = Propel::getConnection();
//        $con->beginTransaction();
//-----------------------cria disciplina temporÃ¡ria--------------------------
     $tbdisciplina = new tbdisciplina();
     $tbdisciplina->setCodDisciplina('TEMP01');
     $criteria = new Criteria();
     $criteria->add(TbdisciplinaPeer::COD_DISCIPLINA, 'TEMP01');
     
     if(TbdisciplinaPeer::doCount($criteria) == 0){
        $tbdisciplina->setDescricao('TEMP01');
        $tbdisciplina->setCh(0);
        $tbdisciplina->setChPratica(0);
        $tbdisciplina->setChTeorica(0);
        $tbdisciplina->setIdSituacao(1);
        $tbdisciplina->setInicio(null);
        $tbdisciplina->setTermino(null);
        $tbdisciplina->setIdSituacao(0);
        $tbdisciplina = $tbdisciplina->save();
     }
//------------------------ e altera disciplia de HST43N -> HST45N---------------
       
        $sqls = array(              
        'UPDATE tbhistorico SET cod_disciplina = \'' + $tbdisciplina->getCodDisciplina() + '\' where cod_disciplina = \'' + $codigo_antigo + '\';',
        'UPDATE tbdisciplinarequisitos SET cod_disciplina = \'' + $tbdisciplina->getCodDisciplina() + '\' where cod_disciplina = \'' + $codigo_antigo + '\';',
        'UPDATE tbcurriculodisciplinas SET cod_disciplina = \'' + $tbdisciplina->getCodDisciplina() + '\' where cod_disciplina = \'' + $codigo_antigo + '\';',
        'UPDATE tboferta SET cod_disciplina = \'' + $tbdisciplina->getCodDisciplina() + '\' where cod_disciplina = \'' + $codigo_antigo + '\';',
        'UPDATE tbturma SET cod_disciplina = \'' + $tbdisciplina->getCodDisciplina() + '\' where cod_disciplina = \'' + $codigo_antigo + '\';');
   try {
            SqlBatch::BatchSqls($sqls);
        } catch (Exception $ex) {
            throw new PropelException($ex->getMessage());
        }

        $sqls[0] = 'UPDATE tbdisciplina SET cod_disciplina = \'' + $codigo_novo + '\' where cod_disciplina = \'' + $codigo_antigo + '\';';
   try {
            SqlBatch::BatchSqls($sqls);
        } catch (Exception $ex) {
            throw new PropelException($ex->getMessage());
        }

        $sqls[0] = 'UPDATE tbhistorico SET cod_disciplina = ' + $codigo_novo + ' where cod_disciplina = ' + $tbdisciplina->getCodDisciplina();
        $sqls[1] = 'UPDATE tbdisciplinarequisitos SET cod_disciplina = \'' + $codigo_novo + '\' where cod_disciplina = \'' + $tbdisciplina->getCodDisciplina() + '\';';
        $sqls[2] = 'UPDATE tbcurriculodisciplinas SET cod_disciplina = \'' + $codigo_novo + '\' where cod_disciplina = \'' + $tbdisciplina->getCodDisciplina() + '\';';
        $sqls[3] = 'UPDATE tboferta SET cod_disciplina = \'' + $codigo_novo + '\' where cod_disciplina = \'' + $tbdisciplina->getCodDisciplina() + '\';';
        $sqls[4] = 'UPDATE tbturma SET cod_disciplina = \'' + $codigo_novo + '\' where cod_disciplina = \'' + $tbdisciplina->getCodDisciplina() + '\';';
        $sqls[5] = 'DELETE FROM tbdisciplina where cod_disciplina = \'' + $tbdisciplina->getCodDisciplina() + '\';';
        try {
            SqlBatch::BatchSqls($sqls);
        } catch (Exception $ex) {
            throw new PropelException($ex->getMessage());
        }
    }

    public static function TrocarCodigo($codigo, $disciplina) {


        if (count($disciplina->getTbcurriculodisciplinass())):
            foreach ($disciplina->getTbcurriculodisciplinass() as $Tbcurriculodisciplinas):
                $Tbcurriculodisciplinas->setCodDisciplina($codigo);
                $Tbcurriculodisciplinas->save();
            endforeach;
        endif;

        if (count($disciplina->getTbdisciplinaIgnoradas())):
            foreach ($disciplina->getTbdisciplinaIgnoradas() as $tbdisciplinasIgnoradas):
                $tbdisciplinasIgnoradas->setCodDisciplina($codigo);
                $tbdisciplinasIgnoradas->save();
            endforeach;
        endif;

        if (count($disciplina->getTbofertas())):
            foreach ($disciplina->getTbofertas() as $tboferta):
                $tboferta->setCodDisciplina($codigo);
                $tboferta->save();
            endforeach;
        endif;
        if (count($disciplina->getTbhistoricos())):

            foreach ($disciplina->getTbhistoricos() as $historico):
                $historico->setCodDisciplina($codigo);
                $historico->save();
            endforeach;
        endif;

        if (count($disciplina->getTbturmas())):
            foreach ($disciplina->getTbturmas() as $turma):
                $turma->setCodDisciplina($codigo);
                $turma->save();
            endforeach;
        endif;
    }

}

// TbdisciplinaPeer
